name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check current directory
        run: pwd

      - name: Create application.properties
        run: |
          rm -rf config/application.properties
          mkdir -p config
          touch config/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 --decode > config/application.properties

      - name: Verify application.properties
        run: |
          ls -l config
          cat config/application.properties

      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle  
        run: |
          chmod +x gradlew
          ./gradlew clean build

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker
        run: docker build --no-cache --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/live_server .
      - name: Push Docker
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/live_server:latest

      - name: Run Docker Container and Check Files
        run: |
          docker run -d --name temp_container ${{ secrets.DOCKERHUB_USERNAME }}/live_server:latest
          docker exec temp_container ls -l /app
          docker exec temp_container cat /app/application.properties
          docker stop temp_container
          docker rm temp_container

      - name: SSH into server and check files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIVE_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ls -l /app
            cat /app/application.properties
            sudo docker ps